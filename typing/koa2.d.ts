/** Declaration file generated by dts-gen */

export = koa2;

declare class koa2 {
  constructor(...args: any[]);

  callback(...args: any[]): void;

  createContext(...args: any[]): void;

  inspect(...args: any[]): void;

  listen(...args: any[]): void;

  onerror(...args: any[]): void;

  toJSON(...args: any[]): void;

  use(...args: any[]): void;

  static defaultMaxListeners: number;

  static init(): void;

  static listenerCount(emitter: any, type: any): any;

  static usingDomains: boolean;
}

declare namespace koa2 {
  class EventEmitter {
    constructor();

    addListener(type: any, listener: any): any;

    emit(type: any, ...args: any[]): any;

    eventNames(): any;

    getMaxListeners(): any;

    listenerCount(type: any): any;

    listeners(type: any): any;

    on(type: any, listener: any): any;

    once(type: any, listener: any): any;

    prependListener(type: any, listener: any): any;

    prependOnceListener(type: any, listener: any): any;

    removeAllListeners(type: any, ...args: any[]): any;

    removeListener(type: any, listener: any): any;

    setMaxListeners(n: any): any;

    static EventEmitter: any;

    static defaultMaxListeners: number;

    static init(): void;

    static listenerCount(emitter: any, type: any): any;

    static usingDomains: boolean;
  }

  namespace EventEmitter {}
}
